[alias]
    st = status -sb
    ll = log --graph --decorate --pretty=oneline --abbrev-commit
    lg = log --graph --color --pretty=format:'%C(cyan bold)%h%Creset - %C(blue)%an%Creset, %ar%C(yellow)%d%Creset%n %C(normal dim italic)%s%Creset'
    df = difftool -t vimdiff -y
    lb = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
    rb = branch -D
    last = log -1 HEAD --stat
    rclone = clone --recurse-submodules -j$(nproc)
    sup = submodule update --recursive
    staged = diff --name-only --cached
    unstage = reset -q HEAD --
    sweep = clean -X -d -f   # Removes all ignored files
    wipe = reset --hard HEAD # Removes all modifications (staged and untracked)
    nope = reset --soft HEAD~
    bignope = !git reset --hard HEAD && git clean -d -f
    poule = !git pull && echo 'üêî'
    pousse = !git push && echo 'üå±'
    fpush = "!f() { read -p \"You are currently on branch $(git branch --show-current), do you really want to force an update on the origin ? (n/Y) \" yn; if [[ \"yn\" = 'Y' ]]; then git push -f \"$@\"; else echo 'Canceled'; fi }; f"
    cfg = !vim ~/.config/git/config
    lcfg = !vim ~/.gitconfig
[core]
    editor = /usr/bin/vim
[init]
    defaultBranch = master
[pull]
    rebase = true
